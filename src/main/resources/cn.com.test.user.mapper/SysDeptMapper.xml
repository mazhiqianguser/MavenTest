<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.test.user.dao.SysDeptDao" >
  <resultMap id="BaseResultMap" type="cn.com.test.user.entity.SysDept" >
    <id column="dept_id" property="dept_id" jdbcType="INTEGER" />
    <result column="dept_name" property="dept_name" jdbcType="VARCHAR" />
    <result column="parent_id" property="parent_id" jdbcType="INTEGER" />
    <result column="dept_describe" property="dept_describe" jdbcType="VARCHAR" />
    <result column="dept_code" property="dept_code" jdbcType="VARCHAR" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="update_time" property="update_time" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    dept_id, dept_name, parent_id, dept_describe, dept_code, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.test.user.entity.SysDeptExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_dept
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_dept
    where dept_id = #{dept_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_dept
    where dept_id = #{dept_id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.test.user.entity.SysDeptExample" >
    delete from sys_dept
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.test.user.entity.SysDept" >
    insert into sys_dept (dept_id, dept_name, parent_id, 
      dept_describe, dept_code, create_time, 
      update_time)
    values (#{dept_id,jdbcType=INTEGER}, #{dept_name,jdbcType=VARCHAR}, #{parent_id,jdbcType=INTEGER}, 
      #{dept_describe,jdbcType=VARCHAR}, #{dept_code,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, 
      #{update_time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.test.user.entity.SysDept" >
    insert into sys_dept
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dept_id != null" >
        dept_id,
      </if>
      <if test="dept_name != null" >
        dept_name,
      </if>
      <if test="parent_id != null" >
        parent_id,
      </if>
      <if test="dept_describe != null" >
        dept_describe,
      </if>
      <if test="dept_code != null" >
        dept_code,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="update_time != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dept_id != null" >
        #{dept_id,jdbcType=INTEGER},
      </if>
      <if test="dept_name != null" >
        #{dept_name,jdbcType=VARCHAR},
      </if>
      <if test="parent_id != null" >
        #{parent_id,jdbcType=INTEGER},
      </if>
      <if test="dept_describe != null" >
        #{dept_describe,jdbcType=VARCHAR},
      </if>
      <if test="dept_code != null" >
        #{dept_code,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null" >
        #{update_time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.test.user.entity.SysDeptExample" resultType="java.lang.Integer" >
    select count(*) from sys_dept
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_dept
    <set >
      <if test="record.dept_id != null" >
        dept_id = #{record.dept_id,jdbcType=INTEGER},
      </if>
      <if test="record.dept_name != null" >
        dept_name = #{record.dept_name,jdbcType=VARCHAR},
      </if>
      <if test="record.parent_id != null" >
        parent_id = #{record.parent_id,jdbcType=INTEGER},
      </if>
      <if test="record.dept_describe != null" >
        dept_describe = #{record.dept_describe,jdbcType=VARCHAR},
      </if>
      <if test="record.dept_code != null" >
        dept_code = #{record.dept_code,jdbcType=VARCHAR},
      </if>
      <if test="record.create_time != null" >
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_time != null" >
        update_time = #{record.update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_dept
    set dept_id = #{record.dept_id,jdbcType=INTEGER},
      dept_name = #{record.dept_name,jdbcType=VARCHAR},
      parent_id = #{record.parent_id,jdbcType=INTEGER},
      dept_describe = #{record.dept_describe,jdbcType=VARCHAR},
      dept_code = #{record.dept_code,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.test.user.entity.SysDept" >
    update sys_dept
    <set >
      <if test="dept_name != null" >
        dept_name = #{dept_name,jdbcType=VARCHAR},
      </if>
      <if test="parent_id != null" >
        parent_id = #{parent_id,jdbcType=INTEGER},
      </if>
      <if test="dept_describe != null" >
        dept_describe = #{dept_describe,jdbcType=VARCHAR},
      </if>
      <if test="dept_code != null" >
        dept_code = #{dept_code,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null" >
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where dept_id = #{dept_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.test.user.entity.SysDept" >
    update sys_dept
    set dept_name = #{dept_name,jdbcType=VARCHAR},
      parent_id = #{parent_id,jdbcType=INTEGER},
      dept_describe = #{dept_describe,jdbcType=VARCHAR},
      dept_code = #{dept_code,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where dept_id = #{dept_id,jdbcType=INTEGER}
  </update>

  <!-- 通过当前不们id查询当前部门及其子部门的记录 -->
  <select id="selectDeptsByParentId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    dept_id,
	  dept_name,
	  parent_id,
	  dept_describe,
	  dept_code,
	  create_time,
	  update_time
    FROM
    (
    SELECT
    t1.dept_id,
		t1.dept_name,
		t1.parent_id,
		t1.dept_describe,
		t1.dept_code,
		t1.create_time,
		t1.update_time,
    IF
    ( find_in_set( parent_id, @pids ) > 0, @pids := concat( @pids, ',', dept_id ), 0 ) AS ischild
    FROM
    ( SELECT dept_id,dept_name,parent_id,dept_describe,dept_code,create_time,update_time FROM sys_dept t ORDER BY parent_id, dept_id ) t1,
    ( SELECT @pids := #{deptId,jdbcType=INTEGER} ) t2
    ) t3
    WHERE
    ischild != 0
    ORDER BY dept_id
  </select>


</mapper>