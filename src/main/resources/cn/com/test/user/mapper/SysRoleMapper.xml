<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.test.user.dao.SysRoleDao" >
  <resultMap id="BaseResultMap" type="cn.com.test.user.entity.SysRole" >
    <id column="role_id" property="role_id" jdbcType="INTEGER" />
    <result column="role_name" property="role_name" jdbcType="VARCHAR" />
    <result column="role_state" property="role_state" jdbcType="INTEGER" />
    <result column="role_code" property="role_code" jdbcType="VARCHAR" />
    <result column="role_describe" property="role_describe" jdbcType="VARCHAR" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="update_time" property="update_time" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    role_id, role_name, role_state, role_code, role_describe, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.test.user.entity.SysRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where role_id = #{role_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_role
    where role_id = #{role_id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.test.user.entity.SysRoleExample" >
    delete from sys_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.test.user.entity.SysRole" >
    insert into sys_role (role_id, role_name, role_state, 
      role_code, role_describe, create_time, 
      update_time)
    values (#{role_id,jdbcType=INTEGER}, #{role_name,jdbcType=VARCHAR}, #{role_state,jdbcType=INTEGER}, 
      #{role_code,jdbcType=VARCHAR}, #{role_describe,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, 
      #{update_time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.test.user.entity.SysRole" >
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="role_id != null" >
        role_id,
      </if>
      <if test="role_name != null" >
        role_name,
      </if>
      <if test="role_state != null" >
        role_state,
      </if>
      <if test="role_code != null" >
        role_code,
      </if>
      <if test="role_describe != null" >
        role_describe,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="update_time != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="role_id != null" >
        #{role_id,jdbcType=INTEGER},
      </if>
      <if test="role_name != null" >
        #{role_name,jdbcType=VARCHAR},
      </if>
      <if test="role_state != null" >
        #{role_state,jdbcType=INTEGER},
      </if>
      <if test="role_code != null" >
        #{role_code,jdbcType=VARCHAR},
      </if>
      <if test="role_describe != null" >
        #{role_describe,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null" >
        #{update_time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.test.user.entity.SysRoleExample" resultType="java.lang.Integer" >
    select count(*) from sys_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_role
    <set >
      <if test="record.role_id != null" >
        role_id = #{record.role_id,jdbcType=INTEGER},
      </if>
      <if test="record.role_name != null" >
        role_name = #{record.role_name,jdbcType=VARCHAR},
      </if>
      <if test="record.role_state != null" >
        role_state = #{record.role_state,jdbcType=INTEGER},
      </if>
      <if test="record.role_code != null" >
        role_code = #{record.role_code,jdbcType=VARCHAR},
      </if>
      <if test="record.role_describe != null" >
        role_describe = #{record.role_describe,jdbcType=VARCHAR},
      </if>
      <if test="record.create_time != null" >
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_time != null" >
        update_time = #{record.update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_role
    set role_id = #{record.role_id,jdbcType=INTEGER},
      role_name = #{record.role_name,jdbcType=VARCHAR},
      role_state = #{record.role_state,jdbcType=INTEGER},
      role_code = #{record.role_code,jdbcType=VARCHAR},
      role_describe = #{record.role_describe,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.test.user.entity.SysRole" >
    update sys_role
    <set >
      <if test="role_name != null" >
        role_name = #{role_name,jdbcType=VARCHAR},
      </if>
      <if test="role_state != null" >
        role_state = #{role_state,jdbcType=INTEGER},
      </if>
      <if test="role_code != null" >
        role_code = #{role_code,jdbcType=VARCHAR},
      </if>
      <if test="role_describe != null" >
        role_describe = #{role_describe,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null" >
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where role_id = #{role_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.test.user.entity.SysRole" >
    update sys_role
    set role_name = #{role_name,jdbcType=VARCHAR},
      role_state = #{role_state,jdbcType=INTEGER},
      role_code = #{role_code,jdbcType=VARCHAR},
      role_describe = #{role_describe,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where role_id = #{role_id,jdbcType=INTEGER}
  </update>
  <select id="pageList" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from sys_role
    WHERE role_state = 1
    ORDER BY create_time desc
    limit #{start} ,#{pageSize}
  </select>
  <!--根据用户id查询用户的角色 并将拥有的角色设置为1（赋值给role_code） -->
  <select id="selectRoleByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
        sr.role_id,
        sr.role_name,
        (CASE WHEN ( SELECT sur.role_id FROM sys_user_role sur WHERE sur.user_id = #{userId} AND sur.role_id = sr.role_id )
        THEN 1 ELSE 0  END ) AS role_code
    FROM
    sys_role sr
  </select>


  <!--查询所有角色名称-->
  <select id="selectRoleName" resultType="cn.com.test.user.entity.SysRole" >
    select
    <include refid="Base_Column_List" />
    from sys_role
  </select>
</mapper>